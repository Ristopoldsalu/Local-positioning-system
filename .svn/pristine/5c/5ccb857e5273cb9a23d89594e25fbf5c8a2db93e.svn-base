package ee.lps.util;

import ee.lps.dto.BeaconMeasurementDto;
import ee.lps.util.MeasurementComparator;

import java.util.*;

/**
 * Created by risto on 20.08.2015.
 */
public class ChooseBestMacsForPositioning {

    public List<BeaconMeasurementDto> chooseBestMacs(Collection<BeaconMeasurementDto> listOfMeasurements) {
        return removeMacsNotUsableForPositioning(sortMacsByRSSI(listOfMeasurements));
    }

    private List<BeaconMeasurementDto> sortMacsByRSSI(Collection<BeaconMeasurementDto> filteredMeasurements) {
        List<BeaconMeasurementDto> sortedList = new ArrayList<>();
        sortedList.addAll(filteredMeasurements);
        Collections.sort(sortedList, new MeasurementComparator());
        Collections.reverse(sortedList);

        return sortedList;
    }

    private List<BeaconMeasurementDto> removeMacsNotUsableForPositioning(List<BeaconMeasurementDto> listOfMeasurements) {
        List<BeaconMeasurementDto> reducedList = new ArrayList<>();
        if (listOfMeasurements.size() > 3) for (int index = 0; index < listOfMeasurements.size(); index++)
            if (index > 3) {
                if (listOfMeasurements.get(index).getRssi() > -90) reducedList.add(listOfMeasurements.get(index));

            } else reducedList.add(listOfMeasurements.get(index));
        return reducedList;
    }

}
